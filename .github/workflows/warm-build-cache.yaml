# Copyright 2023 The Cockroach Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

# Ensure that all go modules are cached within the local GitHub cache
# before executing the full test matrix. We've been seeing some requests
# to the upstream module cache fail due to network rate-limiting.
name: Warm Golang Build Cache
permissions:
  contents: read
on:
  workflow_call:
  workflow_dispatch:
concurrency:
  # Using github.workflow here would inherit the name from the caller,
  # which isn't what we want to do. We want to serialize multiple
  # callers so that the cache and build happen exactly once.
  # https://github.com/orgs/community/discussions/30708#discussioncomment-3518412
  group: warm-cache-${{ github.ref }}
  cancel-in-progress: false
jobs:
  warm-build-cache:
    name: Warm build cache
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        id: setup
        uses: actions/setup-go@v4
        with:
          go-version-file: 'go.mod'

      - name: Download modules
        if: ${{ steps.setup.outputs.cache-hit != 'true' }}
        run: go mod download

      # This should also wind up in the cache.
      - name: Prebuild
        if: ${{ steps.setup.outputs.cache-hit != 'true' }}
        # Keep options in sync with golang.yaml
        run: |
          go build ./...
          CGO_ENABLED=0 go build ./...
