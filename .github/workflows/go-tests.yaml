# Copyright 2023 The Cockroach Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

name: Golang Tests
permissions:
  contents: read
  packages: read
on:
  workflow_call:
  workflow_dispatch:
jobs:
  # Integration matrix tests for all supported CRDB and source DBs.
  tests:
    name: Integration Tests
    runs-on: ${{ matrix.runs-on || 'ubuntu-latest-8-core' }}
    timeout-minutes: 10
    strategy:
      fail-fast: false
      # Refer to the CRDB support policy when determining how many
      # older releases to support.
      # https://www.cockroachlabs.com/docs/releases/release-support-policy.html
      #
      # This matrix is explicit, since we have a few axes (target vs
      # integration) that can't be expressed with the automatic
      # cross-product behavior provided by the matrix operator.
      matrix:
        include:
          - cockroachdb: v23.1

    env:
      COVER_OUT: coverage-${{ strategy.job-index }}.out
      DOCKER_LOGS_OUT: docker-${{ strategy.job-index }}.log
      FIRESTORE_EMULATOR_HOST: 127.0.0.1:8181
      JUNIT_OUT: junit-${{ strategy.job-index }}.xml
      TEST_OUT: go-test-${{ strategy.job-index }}.json
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version-file: 'go.mod'

      # Ensure we can grab any private images we need for testing.
      - name: Log in to GitHub Package Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Start Containers
        working-directory: .github
        run: >
          docker-compose up -d
          cockroachdb-${{ matrix.cockroachdb }}
          ${{ matrix.integration }}
          ${{ matrix.source }}
          ${{ matrix.target }}

      # The go test json output will be written into a pipeline to
      # create a JUnit.xml file. The test reports are aggregated later
      # on to produce a nicer summary of the test output in the GitHub
      # Actions UI.
      #
      # Inspired by
      # https://www.cloudwithchris.com/blog/githubactions-testsummary-go/
      - name: Go Tests
        env:
          COCKROACH_DEV_LICENSE: ${{ secrets.COCKROACH_DEV_LICENSE }}
          CDC_INTEGRATION: ${{ matrix.integration }}
          TEST_SOURCE_CONNECT: ${{ matrix.sourceConn }}
          TEST_TARGET_CONNECT: ${{ matrix.targetConn }}
        run: >
          set -o pipefail;
          go test
          -count 1
          -coverpkg=./internal/cmd/votr/...
          -covermode=atomic
          -coverprofile=${{ env.COVER_OUT }}
          -race
          -v
          ./... 2>&1 |
          go run github.com/jstemmer/go-junit-report/v2
          -iocopy
          -out ${{ env.JUNIT_OUT }}
          -p cockroachdb=${{ matrix.cockroachdb }}
          -p integration=${{ matrix.integration }}
          -package-name ${{ matrix.cockroachdb }}-${{ matrix.integration }} |
          tee ${{ env.TEST_OUT }}

      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ${{ env.COVER_OUT }}

      # Capture container logs in case they're needed for diagnostics.
      - name: Docker container logs
        if: always()
        working-directory: .github
        run: docker-compose logs --no-color > ${{ env.DOCKER_LOGS_OUT }}

      # Upload all test reports to a common artifact name, to make them
      # available to the summarization step. The go test json is
      # uploaded as a developer convenience.
      - name: Stash test logs
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: integration-reports
          path: |
            ${{ env.COVER_OUT }}
            ${{ env.DOCKER_LOGS_OUT }}
            ${{ env.JUNIT_OUT }}
            ${{ env.TEST_OUT }}
          retention-days: 7
