{{- /*gotype: github.com/cockroachdb/cdc-sink/internal/staging/stage.templateData*/ -}}
{{- $top := . -}}
WITH {{- sp -}}

{{- /*
Start by identifying candidate rows to return.

The starting points for this query are passed as three arrays ($1, $2,
$3) which pass the nanos, logical, and start-after key for the given
staging table.

When the caller provides a limit for the total number of rows requested,
we'll set a scan limit here. In all cases, we'le going to SELECT FOR
UPDATE to give the UPDATE clause at the bottom of the query clear access
to updated the applied column.

data_N AS (
SELECT nanos, logical, key, mut, before
FROM staging_table
WHERE (nanos, logical, key) > ( .... )
AND (nanos, logical) < ($3, $4)
AND NOT applied
ORDER BY nanos, logical, key
)

*/ -}}
{{- range  $idx, $tgt := .Targets -}}
{{- $arrIdx := add $idx 1 -}}
{{- if $idx -}}, {{- nl -}}{{- end -}}
data_{{ $idx }} AS (
SELECT nanos, logical, key, mut, before
FROM {{ $top.StagingTable $tgt }}
WHERE (nanos, logical, key) > (($1::INT8[])[ {{- $arrIdx -}} ], ($2::INT8[])[ {{- $arrIdx -}} ], ($5::STRING[])[ {{- $arrIdx -}} ])
AND (nanos, logical) < ($3, $4)
AND NOT applied
ORDER BY nanos, logical, key
)
{{- end -}}

{{- /*
Top-level query aggregates the updates in table order.

SELECT * FROM (
  SELECT 0 idx, ... FROM data_0 UNION ALL
  SELECT 1 idx, ... FROM data_1 UNION ALL ...
  SELECT N idx, ... FROM data_N
)
ORDER BY nanos, logical, idx, key

*/ -}}
{{- nl -}}
SELECT * FROM ( {{- nl -}}
{{- range $idx, $tgt := .Targets -}}
{{- if $idx }} UNION ALL {{- nl -}}{{- end -}}
SELECT {{ $idx }} idx, nanos, logical, key, mut, before FROM data_{{ $idx }}
{{- end -}}
) {{- nl -}}
ORDER BY nanos, logical, idx, key
LIMIT {{ .ScanLimit }}

{{- /* Consume whitespace */ -}}
