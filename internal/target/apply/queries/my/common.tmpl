{{- /*gotype: github.com/cockroachdb/replicator/internal/target/apply.templates*/ -}}

{{- /* names produces a comma-separated list of column names: foo, bar, baz*/ -}}
{{- define "names" -}}
    {{- range $idx, $col := . }}
        {{- if $idx -}},{{- end -}}
        {{ $col.Name }}
    {{- end -}}
{{- end -}}


{{- define "cas-exprs" -}}
    {{- range $groupIdx, $pairs := $.Vars -}}
        {{- if $groupIdx }}{{- nl }}  UNION SELECT {{ end -}}
        {{- range $pairIdx, $pair := $pairs -}}
            {{- if $pairIdx -}},{{- end }}
             {{- if $pair.ValidityParam -}}
                CASE WHEN ? = 1 THEN {{- sp -}}
              {{- end -}}
            {{- if $pair.Expr -}}
                ({{ $pair.Expr }})
            {{- else if eq $pair.Column.Type "geometry" -}}
                st_geomfromgeojson(?)
            {{- else -}}
               ?
            {{- end -}}
            {{- if $pair.ValidityParam -}}
                {{- sp -}} ELSE {{ $pair.Column.DefaultExpr }} END
            {{- end }}
        {{- end -}}
    {{- end -}}
{{- end -}}

{{- define "exprs" -}}
    {{- range $groupIdx, $pairs := $.Vars -}}
        {{- if $groupIdx -}},{{- nl -}}{{- end -}}
        (
        {{- range $pairIdx, $pair := $pairs -}}
            {{- if $pairIdx -}},{{- end -}}
             {{- if $pair.ValidityParam -}}
                CASE WHEN ? THEN {{- sp -}}
              {{- end -}}
            {{- if $pair.Expr -}}
                ({{ $pair.Expr }})
            {{- else if eq $pair.Column.Type "geometry" -}}
                st_geomfromgeojson(?)
            {{- else -}}
               ?
            {{- end -}}
            {{- if $pair.ValidityParam -}}
                {{- sp -}} ELSE {{ $pair.Column.DefaultExpr }} END
            {{- end -}}
        {{- end -}}
        )
    {{- end -}}
{{- end -}}

{{- /* join creates a comma-separated list of its input: a, b, c, ... */ -}}
{{- define "join" -}}
    {{- range $idx, $val := . }}
        {{- if $idx -}},{{- end -}}
        {{- $val -}}
    {{- end -}}
{{- end -}}


{{- define "valuelist" -}}
    {{- range $idx, $val := . }}
        {{- if $idx -}},{{- end -}}
        {{- $val.Name -}}=VALUES({{- $val.Name -}})
    {{- end -}}
{{- end -}}
